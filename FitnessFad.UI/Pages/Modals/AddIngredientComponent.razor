@inject IIngredientDataService dataService
<div class="modal fade" id="addMeal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileModalLabel">Add Ingredient</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="list-group">
                <form class="form-inline my-2 my-lg-0">
                    <div class="input-group w-100">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Search">
                        <div class="input-group-append">
                            <button class="btn btn-outline-success mr-1 my-sm-0" type="submit">Search</button>
                        </div>
                    </div>
                </form>
                @foreach (var ingredient in ingredients)
                {
                    <a href="#" class="list-group-item list-group-item-action" @onclick="() => ChooseIngredient(ingredient)">@ingredient.Name 
                <DisplayNutrionalInformation Calories="ingredient.Calories" 
                                             Carbs="ingredient.Carbs" 
                                             Protein="ingredient.Protein" 
                                             Fat="ingredient.Fat" />
                </a>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<IIngredientModel> OnChosen { get; set; }

    private List<IIngredientModel> ingredients;


    protected async override Task OnInitializedAsync()
    {
        ingredients = await dataService.GetIngredients();
    }
    private void ChooseIngredient(IIngredientModel ingredient)
    {
        OnChosen.InvokeAsync(ingredient);
        
    }
}